---

variables:
  DOCKER_DRIVER: overlay2
  PORT: 2375
  DOCKER_HOST: tcp://localhost:2375
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH
  COMPOSE_INTERACTIVE_NO_CLI: 'true'

stages:
  - lint
  - test
  - autorel
  - build
  - release

#
# Check that the commit message is in conventional-commit
# format (https://www.conventionalcommits.org/).
# As a special case if this is a merge request, allow that
# format.
lint:
  stage: lint
  image: cr.agilicus.com/corp-tools/build-containers/conform
  script: |
    [ -n "$CI_MERGE_REQUEST_ID" ] && /usr/local/bin/conform enforce || true

#
# Run any tests against the code that we want prior to doing a release
test:
  stage: test
  image: cr.agilicus.com/corp-tools/docker-compose
  services:
    - name: docker:dind
  script: |
    docker-compose up --build -d

    # for whatever reason moodle's php-unit needs a wierd locale to run
    docker-compose exec -T --user root moodle apt-get install -y locales
    docker-compose exec -T --user root moodle locale-gen en_AU.UTF-8

    docker-compose exec -T --user root moodle php /var/www/moodle/admin/tool/phpunit/cli/init.php

    # limited selection of core tests
    #docker-compose exec -T moodle vendor/bin/phpunit "core_course_category_testcase" course/tests/category_test.php <-- errors
    docker-compose exec -T moodle vendor/bin/phpunit lib/ddl/tests/ddl_test.php
    docker-compose exec -T moodle vendor/bin/phpunit "core_dml_testcase" lib/dml/tests/dml_test.php
    docker-compose exec -T moodle vendor/bin/phpunit lib/tests/lock_test.php
    docker-compose exec -T moodle vendor/bin/phpunit user/tests/editlib_test.php

    # limited selection of the non-broken iomad tests
    docker-compose exec -T moodle vendor/bin/phpunit local/iomad/tests/filter_iomad_filter_test.php
    docker-compose exec -T moodle vendor/bin/phpunit local/iomad/tests/filter_manager_test.php
    #docker-compose exec -T moodle vendor/bin/phpunit local/iomad/tests/mod_forum_lib_test.php <-- errors
    docker-compose exec -T moodle vendor/bin/phpunit local/iomad/tests/navigationlib_test.php
    docker-compose exec -T moodle vendor/bin/phpunit local/iomad/tests/weblib_format_text_test.php

#
# Run `conventional-changelog -p angular -i CHANGELOG.md -s -r 0`
# the first time to generate the initial CHANGELOG.md from empty
#
# (only on the master branch) created a 'standard release'
# [see](https://github.com/conventional-changelog/standard-version)
# - update CHANGELOG.md
# - create a tag vM.m.b
# - push tag to repo
# - push CHANGELOG.md to repo
# The use of 'conventional-commit' messages is required (fix/feat)
# see [conventional-commits](https://www.conventionalcommits.org/)
#
autorel:
  stage: autorel
  image: cr.agilicus.com/corp-tools/build-containers/release
  script: |
    set -x
    if [ -n "$CI_COMMIT_TAG" ]
    then
      echo "Skip autorel, CI_COMMIT_TAG=$CI_COMMIT_TAG is present"
    else
      node-release
    fi
  only:
    - integration
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_MESSAGE =~ /^chore\(release\)/

#
# This stage does a docker build, and then push to registry
# The image will be called 'group/repo:branch'
# If branch == master, it will also be pushed to 'latest'
# If a commit tag vM.m.b exists, then the image will also be tagged as
#  - image:M.m.b
#  - image:M.m
#  - image:M
#
build:
  stage: build
  image: cr.agilicus.com/corp-tools/docker-compose
  services:
    - name: docker:dind
  script: |
    std-build-tag-push Dockerfile -b integration

#
# If a tag is present, this could mean that the 'autorel' has
# fired, and that a build of that is now present, we might
# choose to push to external repo etc.
#
release:
  stage: release
  image: cr.agilicus.com/corp-tools/build-containers/release
  script: |
    echo "A new release, tag is $CI_COMMIT_TAG"
    # nothing to do here
  except:
    - branches
  only:
    - tags
